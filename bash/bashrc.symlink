# aliases
alias ..='cd ..'
alias cd..='cd ..'
# alias ls='ls -G'
alias l='ll'
alias gp='grep -Hn --color=auto'
alias fgp='fgrep -Hn --color=auto'
alias egp='egrep -Hn --color=auto'
alias vlc='open -a Vlc'
alias subl='open -a Sublime\ Text'

alias wha='which -a'

# Shorthand for colorized sdcv output
function dict {
  sdcv --color "$@" | less -r
}

export XML_CATALOG_FILES="/usr/local/etc/xml/catalog"

# Set NodeJS path
export NODE_PATH=/usr/local/lib/node

# Use Vim as default editor
export EDITOR="vim"

# Setup Opam environment
export CAML_LD_LIBRARY_PATH=~/.opam/system/lib/stublibs:\
/usr/local/lib/ocaml/stublibs;
export OCAML_TOPLEVEL_PATH=~/.opam/system/lib/toplevel;

# Set base PATH
export PATH="/usr/local/bin:/usr/bin:/bin:/user/local/sbin:/usr/sbin:/sbin:/usr/X11/bin"

# Add ruby executables
export PATH="/usr/local/opt/ruby/bin:$PATH"

# Add LaTeX executables
export PATH="/usr/local/texlive/2013/bin/x86_64-darwin:$PATH"

# Add GNU core utilities
export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"

# Add GNU sed
export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
export MANPATH="/usr/local/opt/gnu-sed/libexec/gnuman:$MANPATH"

# Add Opam executables
export PATH="$HOME/.opam/system/bin:$PATH"

# Add Cabal executables
export PATH="$HOME/.cabal/bin:$PATH"

# Add user executables
export PATH="$HOME/bin:$PATH"

export CLASSPATH="$CLASSPATH:$HOME/lib"

export GNUTERM=x11

# Automatically add completion for all aliases to commands having completion
# functions
function alias_completion {
  local namespace="alias_completion"

  # parse function based completion definitions, where capture group 2 =>
  # function and 3 => trigger
  local compl_regex='complete( +[^ ]+)* -F ([^ ]+) ("[^"]+"|[^ ]+)'
  # parse alias definitions, where capture group 1 => trigger, 2 => command, 3
  # => command arguments
  local alias_regex="alias ([^=]+)='(\"[^\"]+\"|[^ ]+)(( +[^ ]+)*)'"

  # create array of function completion triggers, keeping multi-word triggers
  # together
  eval "local completions=($(complete -p | sed -Ene "/$compl_regex/s//'\3'/p"))"
  (( ${#completions[@]} == 0 )) && return 0

  # create temporary file for wrapper functions and completions
  rm -f "/tmp/${namespace}-*.tmp" # preliminary cleanup
  local tmp_file="$(mktemp "/tmp/${namespace}-XXXXXX.tmp")" || return 1

  # read in "<alias> '<aliased command>' '<command args>'" lines from defined
  # aliases
  local line; while read line; do
    # some alias arg patterns cause an eval parse error
    eval "local alias_tokens=($line)" 2>/dev/null || continue
    local alias_name="${alias_tokens[0]}" alias_cmd="${alias_tokens[1]}" \
      alias_args="${alias_tokens[2]# }"

    # skip aliases to pipes, boolan control structures and other command lists
    # (leveraging that eval errs out if $alias_args contains unquoted shell
    # metacharacters)
    eval "local alias_arg_words=($alias_args)" 2>/dev/null || continue

    # skip alias if there is no completion function triggered by the aliased
    # command
    [[ " ${completions[*]} " =~ " $alias_cmd " ]] || continue
    local new_completion="$(complete -p "$alias_cmd")"

    # create a wrapper inserting the alias arguments if any
    if [[ -n $alias_args ]]; then
      local compl_func="${new_completion/#* -F /}"; \
        compl_func="${compl_func%% *}"
      # avoid recursive call loops by ignoring our own functions
      if [[ "${compl_func#_$namespace::}" == $compl_func ]]; then
        local compl_wrapper="_${namespace}::${alias_name}"
          echo "function $compl_wrapper {
            (( COMP_CWORD += ${#alias_arg_words[@]} ))
            COMP_WORDS=($alias_cmd $alias_args \${COMP_WORDS[@]:1})
            $compl_func
          }" >> "$tmp_file"
          new_completion=\
            "${new_completion/ -F $compl_func / -F $compl_wrapper }"
      fi
    fi

    # replace completion trigger by alias
    new_completion="${new_completion% *} $alias_name"
    echo "$new_completion" >> "$tmp_file"
  done < <(alias -p | sed -Ene "s/$alias_regex/\1 '\2' '\3'/p")
  source "$tmp_file" && rm -f "$tmp_file"
}; alias_completion; unset -f alias_completion
export QTDIR=/usr/local
export JAVA_HOME="$(/usr/libexec/java_home)"

export PERL_LOCAL_LIB_ROOT="$HOME/perl5:$PERL_LOCAL_LIB_ROOT";
export PERL_MB_OPT="--install_base "$HOME/perl5"";
export PERL_MM_OPT="INSTALL_BASE=$HOME/perl5";
export PERL5LIB="$HOME/perl5/lib/perl5:$PERL5LIB";
export PATH="$HOME/perl5/bin:$PATH";

export GOPATH=~/GO

[ -s "$HOME/.scm_breeze/scm_breeze.sh" ] && source "$HOME/.scm_breeze/scm_breeze.sh"

# OPAM configuration
. /Users/joshuahagins/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true
